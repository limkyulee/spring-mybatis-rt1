<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kyuleelim.admincore.user.dao.UserDao">

  <sql id="userCmmSearchQ">
    /* 검색 조건 | 공통 */
    <if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
      <choose>
        <when test="searchType == 'username'">
          AND USER_NM ILIKE #{escapedKeyword} || '%'
        </when>
        <when test="searchType == 'email'">
          AND EMAIL ILIKE #{escapedKeyword} || '%'
        </when>
      </choose>
    </if>
  </sql>

  <sql id="userCmmOrderQ">
    /* 정렬 방향 | 공통 */
    <choose>
      <when test="sord != null or sord == '' or sord = 'asc'">
        ASC
      </when>
      <when test="sord == 'desc'">
        DESC
      </when>
      <otherwise>
        ASC
      </otherwise>
    </choose>
  </sql>

  <select id="retrieveUserListWithoutLimit" resultType="User">
    /* userDao.retrieveUserListWithoutLimit | 사용자 관리 목록 조회 | 미검색 */
    SELECT UUID
         , USER_ID
         , USER_NM
         , USER_STATUS
         , PASSWORD
         , EMAIL
         , CREATED_AT
    FROM TB_RT_USER
   ORDER BY USER_NM
  </select>

  <select id="retrieveUserList" parameterType="UserListRequest" resultType="User">
    /* userDao.retrieveUserList | 사용자 관리 목록 조회 | 검색 */
    SELECT UUID
         , USER_ID
         , USER_NM
         , USER_STATUS
         , PASSWORD
         , EMAIL
         , CREATED_AT
      FROM TB_RT_USER
    /* 검색 조건 */
    <include refid="userCmmSearchQ" />
    /* 정렬 기준 */
    <choose>
      <when test="sidx == null or sidx == ''">
        ORDER BY USER_ID
      </when>
      <otherwise>
        <choose>
        <when test="sidx == 'userId'">
            ORDER BY USER_ID
          </when>
          <when test="sidx == 'userNm'">
            ORDER BY USER_NM
          </when>
            <otherwise>
            ORDER BY EMAIL
          </otherwise>
        </choose>
      </otherwise>
    </choose>
    /* 정렬 방향 */
    <include refid="userCmmOrderQ" />
    /* 페이지네이션 */
    LIMIT #{limit} OFFSET #{offset}
  </select>

  <select id="retrieveUserListCount" resultType="int" parameterType="UserListRequest">
    /* userDao.retrieveUserListCount | 사용자 관리 목록 총 건 수 조회 | 검색 */
    SELECT COUNT(UUID)
    FROM TB_RT_USER
    /* 검색조건 */
    <include refid="userCmmSearchQ" />
  </select>

  <select id="retrieveUser" parameterType="UserRequest" resultType="User">
  /* userDao.retrieveUser | 사용자 관리 상세 조회 */
  SELECT USER_ID
       , USER_NM
       , USER_STATUS
       , EMAIL
       , CREATED_AT
       , UPDATED_AT
    FROM TB_RT_USER
   WHERE UUID = #{uuid}
  </select>

  <insert id="createUser" parameterType="UserRequest">
    /* userDao.createUser | 사용자 등록 */
    INSERT INTO TB_RT_USER
         ( UUID
         , USER_ID
         , USER_NM
         , USER_STATUS
         , PASSWORD
         , EMAIL
         , CREATED_AT
         , UPDATED_AT )
    VALUES
         ( ${uuid}
         , #{userId}
         , #{userNm}
         , ${userStatus}
         , #{password}
         , #{email}
         , CURRENT_TIMESTAMP
         , CURRENT_TIMESTAMP )
  </insert>

  <update id="updateUser" parameterType="UserRequest">
    /* userDao.updateUser | 사용자 수정 */
    UPDATE TB_RT_USER
       SET USER_NM = #{userNm}
         , EMAIL = #{email}
         , USER_STATUS = #{userStatus}
         , UPDATED_AT = CURRENT_TIMESTAMP
     WHERE UUID = #{uuid}
  </update>

  <delete id="deleteUser" parameterType="UserRequest">
    /* userDao.deleteUser | 사용자 삭제 */
    DELETE FROM USER
     WHERE UUID = #{uuid}
  </delete>

  <update id="updatePasswordOnly" parameterType="UserRequest">
    /* userDao.updatePasswordOnly | password 수정 */
    UPDATE TB_RT_USER
       SET PASSWORD = #{password}
     WHERE UUID = #{uuid}
       AND USER_ID = #{userId}
  </update>

</mapper>